datasource db {
  provider = "sqlserver"
  url      = env("DATABASE_URL")
}

generator client {
  provider = "prisma-client-js"
}

model Usuarios {
  id                  Int             @id @default(autoincrement())
  name                String
  lastname            String
  email               String          @unique
  telefono            String
  fechadenacimiento   DateTime
  user                String
  preguntaSecreta     String
  respuestaSecreta    String
  password            String
  verified            Boolean         @default(false)
  role                String          @default("normal") // en vez de enum
  failedLoginAttempts Int             @default(0)
  lockedUntil         DateTime?
  blocked             Boolean         @default(false)
  lockCount           Int             @default(0)
  lastLogin           DateTime?
  createdAt           DateTime        @default(now())
  updatedAt           DateTime        @updatedAt

  // Relación 1:N con LoginHistory
  loginHistories      LoginHistory[]
}

model LoginHistory {
  id         Int       @id @default(autoincrement())
  loginDate  DateTime  @default(now())
  
  userId     Int
  usuarios   Usuarios  @relation(fields: [userId], references: [id])
}


model Productos {
  id           Int           @id @default(autoincrement())
  name         String        @db.VarChar(100)
  description  String        @db.VarChar(500)
  price        Float         @default(0)
  stock        Int           @default(0)
  partNumber   String        @unique
  category     String
  brand        String
  discount     Float?        @default(0)

  // Relación 1:N con imágenes
  images       Imagenes[]

  // Relación 1:N con compatibilidades
  compatibilities Compatibility[]  // Cambié Compatibilidad por Compatibility

  // relacion con ventas
  sales        Sales[]       // Relación inversa a Sales

  createdAt    DateTime @default(now())
  updatedAt    DateTime @updatedAt
}

model Imagenes {
  id         Int       @id @default(autoincrement())
  url        String
  productId  Int
  producto   Productos @relation(fields: [productId], references: [id])
}

model Compatibility {  // Cambié Compatibilidad por Compatibility
  id         Int    @id @default(autoincrement())
  make       String?
  model      String? // Esto permite valores null
  year       Int?    // Esto permite valores null
  engineType String?
  productId  Int
  product    Productos @relation(fields: [productId], references: [id])  // Cambié Product por Productos
}


model Sales {
  id          Int       @id @default(autoincrement())
  productId   Int       // Relación con el producto vendido
  product     Productos @relation(fields: [productId], references: [id])
  quantity    Int       @default(1)  // Cantidad vendida
  salePrice   Float     // Precio unitario al momento de la venta (por si cambia después)
  total       Float     // quantity * salePrice (redundante pero útil para consultas)
  saleDate    DateTime  @default(now()) // Fecha de la venta
  customerId  Int?      // Opcional: si luego quieres registrar clientes
  // (Podrías añadir más campos como descuentos aplicados, vendedor, etc.)
}

model Logos {
  id          Int      @id @default(autoincrement())
  url         String
  fechaSubida DateTime @default(now())
  autor       String

  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
}

model TerminosYCondiciones {
  id            Int      @id @default(autoincrement())
  title         String
  content       String
  effectiveDate DateTime
  isCurrent     Boolean  @default(false)

  createdAt     DateTime @default(now())
  updatedAt     DateTime @updatedAt
}



model PoliticasDePrivacidad {
  id            Int      @id @default(autoincrement())
  title         String
  content       String
  effectiveDate DateTime
  isCurrent     Boolean  @default(false)

  createdAt     DateTime @default(now())
  updatedAt     DateTime @updatedAt
}


model DeslindeDeResponsabilidad {
  id            Int      @id @default(autoincrement())
  title         String
  content       String
  effectiveDate DateTime
  isCurrent     Boolean  @default(false)

  createdAt     DateTime @default(now())
  updatedAt     DateTime @updatedAt
}
